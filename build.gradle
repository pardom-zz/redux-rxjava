group 'redux'
version '1.2.3'

buildscript {

    ext {
        // Build
        kotlinVersion = '1.1.4'
        junitPlatformGradleVersion = '1.0.0'
        // Third party
        jvmReduxApiVersion = '1.2.0'
        rxJavaVersion = '1.3.2'
        rxJava2Version = '2.1.3'
        // Test
        junitVersion = '4.12'
        mockitoKotlinVersion = '1.5.0'
        spekVersion = '1.1.4'
        junitPlatformRunnerVersion = '1.0.0-RC2'
        mockitoCoreVersion = '2.10.0'
        reduxKotlinVersion = '1.2.1'

        // Dependencies
        // Third party
        jvmReduxApi = "com.github.jvm-redux.jvm-redux-api:api:$jvmReduxApiVersion"
        rxJava = "io.reactivex:rxjava:$rxJavaVersion"
        rxJava2 = "io.reactivex.rxjava2:rxjava:$rxJava2Version"
        // Test
        junit = "junit:junit:$junitVersion"
        junitPlatformRunner = "org.junit.platform:junit-platform-runner:$junitPlatformRunnerVersion"
        kotlinTest = "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
        mockitoCore = "org.mockito:mockito-core:$mockitoCoreVersion"
        mockitoKotlin = "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
        reduxKotlin = "com.github.pardom:redux-kotlin:$reduxKotlinVersion"
        spekApi = "org.jetbrains.spek:spek-api:$spekVersion"
        spekJunitPlatformEngine = "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformGradleVersion"
    }

}

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'org.junit.platform.gradle.plugin'

    junitPlatform {
        filters {
            engines {
                include 'spek'
            }
        }
    }

    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://dl.bintray.com/jetbrains/spek" }
    }

    dependencies {
        compile jvmReduxApi

        testCompile junit
        testCompile junitPlatformRunner
        testCompile kotlinTest
        testCompile mockitoCore
        testCompile mockitoKotlin
        testCompile reduxKotlin
        testCompile spekApi
        testRuntime spekJunitPlatformEngine
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}
